import {NativeModules} from 'react-native';

const {RNPgReactNativeSdkBridge} = NativeModules;

class Cashfree {
  /**
   * Starts Cashfree's Web Checkout Flow
   * @param params A map of <String, String> containing payment params.
   * @param env A String value describing environment of the payment('TEST' or 'PROD').
   * @param callback A callback to return back the result.
   */
  startPaymentWEB(params: Map<string, string>, env: string, callback: (responseJson: string) => void) {
    if (params instanceof Map) {
      RNPgReactNativeSdkBridge.startPaymentWEB(Cashfree.strMapToObj(params), env, callback);
    } else {
      // @ts-ignore
      if (params instanceof Object) {
        RNPgReactNativeSdkBridge.startPaymentWEB(params, env, callback);
      }
    }
  }

  /**
   * Starts Cashfree's UPI Payment Flow
   * @param params A map of <String, String> containing payment params.
   * @param env A String value describing environment of the payment('TEST' or 'PROD').
   * @param callback A callback to return back the result.
   */
  startPaymentUPI(params: Map<string, string>, env: string, callback: (responseJson: string) => void) {
    if (params instanceof Map) {
      RNPgReactNativeSdkBridge.startPaymentUPI(Cashfree.strMapToObj(params), env, callback);
    } else {
      // @ts-ignore
      if (params instanceof Object) {
        RNPgReactNativeSdkBridge.startPaymentUPI(params, env, callback);
      }
    }
  }

  /**
   * Starts Cashfree's Web Checkout Flow
   * @return A promise with a result as a JSON array containing upi apps installed in user device.
   * @example [
   {
      “displayName”: “Gpay”,
      “id”: “com.google.android.apps.nbu.paisa.user”,
      “icon”: “iVBORw0KGgoAAAANSUhEUgAAALQAAAC0CAYAAAA9zQYyAAAAAXNSR0IArs4c6QAA... (in base64)”
      },
   {
      “displayName”: “PHONEPE”,
      “id”: “com.phonepe.app”,
      “icon”: “iVBORw0KGgoAAAANSUhEUgAAALQAAAC0CAYAAAA9zQYyAAAAAXNSR0IArs4c6QAA... (in base64)”
      }
   ]
   * NOTE: the "icon" in the JSON is a base64 encoded icon string.
   * Use this function in conjunction with 'startPaymentUPI' and add the key as 'appName' in the params with the value as
   * 'id' to initiate a Seamless UPI flow.
   */
  async getUPIApps() {
    return RNPgReactNativeSdkBridge.getUPIApps();
  }

  /**
   * @param icon value of a app icon from method 'getUPIApps'
   * @return a string of icon which can be used directly to set a image source.
   */
  getIconString(icon: String): string {
    return 'data:image/png;base64,' + icon;
  }

  private static strMapToObj(strMap: Map<string, string>) {
    const obj = Object.create(null);
    // @ts-ignore
    for (const [k, v] of strMap) {
      // We don’t escape the key '__proto__'
      // which can cause problems on older engines
      obj[k] = v;
    }
    return obj;
  }

}

const RNPgReactNativeSdk = new Cashfree();

export default RNPgReactNativeSdk
